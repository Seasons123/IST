为了方便理解，以下面指标级次确定的实例说明，程序支持不定指标级次的情况

一、target.json中

当前末级指标是三级，
它的父级是一级和二级，
需要扩展选择的是它的下一级指标：四级

扩展后当前末级指标是四级


二、nextKpi.json中

1.现在是模拟的返回结果，实际的返回只是返回：当前的三级指标下的四级指标，而不是所有指标下的四级指标
2.以这一个为例说明：
（1）每次返回的只是类似下面这个json结构。目前前端需要的数据都在字段“next_kpi_list”中，
（2）目前字段“parent_id”可有可无，前端没有用到该字段，而且，进行存储的时候，只需要存末级指标和他们的排序号，不需要传末级指标的父级id，
因为各级指标的子父级关系后台已经结构化整理完毕，既然能够根据某个三级指标查出所有的四级指标，也能根据某个四级指标定位出它的父级
"kpi_final": {
      "parent_id": "fcba71f4-7c77-45bb-85c4-cc4f4731cc87",
      "next_kpi_list":[
        {
          "kpi_id": "pcy001",
          "kpi_name": "平台试运行进度",
          "kpi_level": "4",
          "kpi_weight": 0,
          "kpi_explain": "平台试运行进度：一是部分部门对试运行工作认识不到位，重视程度不够。个别单位至今仍未使用市平台录入业务，办件量为零，严重影响全县整体进度；二是个别部门至今仍未接入全市电子政务网，导致市平台无法登陆使用；三是部分部门业务未全部录入市平台，特别是使用省以上自建系统办理业务的单位，二次录入不及时，存在选择性录入等问题。",
          "kpi_stand": [
            {
              "id": "pcy001001",
              "kpi_stand_name": "平台试运行进度按计划进行，得2分"
            },
            {
              "id": "pcy001002",
              "kpi_stand_name": "平台试运行进度未按计划进行，得0-2分"
            }
          ],
          "order_num": 1
        },
        {
          "kpi_id": "pcy002",
          "kpi_name": "预计工程的完成情况",
          "kpi_explain":"预计工程的完成情况",
          "kpi_level": "4",
          "kpi_weight": 0,
          "kpi_stand": [
            {
              "id": "pcy002001",
              "kpi_stand_name": "平台试运行进度按计划进行，得2分"
            },
            {
              "id": "pcy002002",
              "kpi_stand_name": "平台试运行进度未按计划进行，得0-2分"
            }
          ],
          "order_num": 2
        }
        ……
        ]
    }


